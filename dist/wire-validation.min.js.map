{"version":3,"file":"wire-validation.min.js","sources":["../src/index.js","../builds/cdn.js"],"sourcesContent":["function bindComponent(el, Alpine) {\n    Alpine.bind(el, {\n        'x-data'() {\n            return {\n                errors: [],\n                models: [],\n                errorsFor(model) {                    \n                    // Checking for any errors\n                    if(!model) {\n                        let errors = [];\n\n                        for(let result of this.models) {\n                            errors.push(...this.errors[result])\n                        }                        \n                        return errors;\n                    }\n\n                    if(model.includes('*')) {\n                        let models = this.wildcardModelSearch(model);\n                        let errors = [];\n\n                        for(let result of models) {\n                            errors.push(...this.errors[result])\n                        }\n                        return errors;\n                    }\n                    return this.errors[model] ?? [];\n                },\n                firstErrorFor(model) {                    \n                    return this.errorsFor(model)[0]\n                },\n                hasErrors(model) {\n                    return this.errorsFor(model).length > 0 ?? false;\n                },\n                processValidation(errors) {\n                    this.errors = errors;\n                    this.models = Object.keys(errors);\n                },\n                wildcardModelSearch(term) {\n                    let rx = new RegExp(term.replaceAll('*', '.*'))\n                    return this.models.filter(model => rx.test(model));\n                }\n            }\n        }\n    })\n}\n\nexport default function (Alpine) {\n    // Ensure the hook is loaded on every page\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        Livewire.hook('message.processed', (message, component) => {\n            let alpineComponent = Alpine.$data(component.el);\n\n            // Make sure we aren't going to call an invalid alpine component\n            if(alpineComponent.processValidation) {\n                alpineComponent.processValidation(message.response.serverMemo.errors);\n            }\n        })\n    });\n\n    Alpine.directive('wire-errors', (el, { modifiers }, { Alpine }) => {\n        bindComponent(el, Alpine);\n    }).before('bind')\n\n    \n    // Gives the ability to check on another component's errors\n    // which might be useful if one component's activity \n    // depends on the error state of another\n    Alpine.magic('componentErrors', (el, { Alpine }) => (elementId, model) => {\n        let element = document.getElementById(elementId);\n\n        if(!element) {\n            console.warn(`Element ${elementId} not found`)\n            return [];\n        }\n\n        let stack = Alpine.$data(element);\n\n        if(!stack || !stack.$root.id === elementId) {\n            console.warn(`Element ${elementId} is not an AlpineJs component`)\n            return [];\n        }\n\n        return stack.errorsFor(model);\n    })\n}","import ComponentErrors from '../src/index.js';\n\ndocument.addEventListener('alpine:init', () => {\n    ComponentErrors(window.Alpine);\n});"],"names":["ComponentErrors","Alpine","document","addEventListener","Livewire","hook","message","component","alpineComponent","$data","el","processValidation","response","serverMemo","errors","directive","modifiers","bind","x-data","models","errorsFor","model","result","this","push","includes","wildcardModelSearch","firstErrorFor","hasErrors","length","Object","keys","term","rx","RegExp","replaceAll","filter","test","bindComponent","before","magic","elementId","element","getElementById","console","warn","stack","$root","id","window"],"mappings":"2FA+Ce,SAAAA,EAAUC,GAErBC,SAASC,iBAAiB,oBAAoB,KAC1CC,SAASC,KAAK,qBAAqB,CAACC,EAASC,KACzC,IAAIC,EAAkBP,EAAOQ,MAAMF,EAAUG,IAG1CF,EAAgBG,mBACfH,EAAgBG,kBAAkBL,EAAQM,SAASC,WAAWC,OAClE,GACF,IAGNb,EAAOc,UAAU,eAAe,CAACL,GAAMM,cAAef,cA5D1D,SAAuBS,EAAIT,GACvBA,EAAOgB,KAAKP,EAAI,CACZ,SAAQQ,KACG,CACHJ,OAAQ,GACRK,OAAQ,GACRC,SAAAA,CAAUC,GAEN,IAAIA,EAAO,CACP,IAAIP,EAAS,GAEb,IAAI,IAAIQ,KAAUC,KAAKJ,OACnBL,EAAOU,QAAQD,KAAKT,OAAOQ,IAE/B,OAAOR,CACX,CAEA,GAAGO,EAAMI,SAAS,KAAM,CACpB,IAAIN,EAASI,KAAKG,oBAAoBL,GAClCP,EAAS,GAEb,IAAI,IAAIQ,KAAUH,EACdL,EAAOU,QAAQD,KAAKT,OAAOQ,IAE/B,OAAOR,CACX,CACA,OAAOS,KAAKT,OAAOO,IAAU,EAChC,EACDM,aAAAA,CAAcN,GACV,OAAOE,KAAKH,UAAUC,GAAO,EAChC,EACDO,SAAAA,CAAUP,GACN,OAAOE,KAAKH,UAAUC,GAAOQ,OAAS,IAAK,CAC9C,EACDlB,iBAAAA,CAAkBG,GACdS,KAAKT,OAASA,EACdS,KAAKJ,OAASW,OAAOC,KAAKjB,EAC7B,EACDY,mBAAAA,CAAoBM,GAChB,IAAIC,EAAK,IAAIC,OAAOF,EAAKG,WAAW,IAAK,OACzC,OAAOZ,KAAKJ,OAAOiB,QAAOf,GAASY,EAAGI,KAAKhB,IAC/C,KAIhB,CAgBQiB,CAAc5B,EAAIT,EAAO,IAC1BsC,OAAO,QAMVtC,EAAOuC,MAAM,mBAAmB,CAAC9B,GAAMT,YAAa,CAACwC,EAAWpB,KAC5D,IAAIqB,EAAUxC,SAASyC,eAAeF,GAEtC,IAAIC,EAEA,OADAE,QAAQC,KAAM,WAAUJ,eACjB,GAGX,IAAIK,EAAQ7C,EAAOQ,MAAMiC,GAEzB,OAAII,IAAUA,EAAMC,MAAMC,KAAOP,EAK1BK,EAAM1B,UAAUC,IAJnBuB,QAAQC,KAAM,WAAUJ,kCACjB,GAGkB,GAErC,CCnFAvC,SAASC,iBAAiB,eAAe,KACrCH,EAAgBiD,OAAOhD,OAAO"}