!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";function e(e){!function(e){e.store("validationErrors",{__errors:{},init(){console.info("Validation store initialized"),Livewire.hook("message.processed",((e,r)=>{this.__errors[e.component.id]=e.response.serverMemo.errors}))},get components(){return Object.keys(this.__errors).filter((e=>Object.values(this.__errors[e]).length>0))},getWireModels(e){return Object.keys(this.__errors[e]??[])},getErrorMessages(e,r){return this.__errors[e]?this.__errors[e][r]??[]:[]},hasValidationErrors(e,r){return this.getErrorMessages(e,r).length>0??!1}})}(e),e.directive("share-validation",((e,{modifiers:r},{Alpine:s})=>{!function(e,r){r.bind(e,{"x-data":()=>({wireId:null,init(){this.wireId=this.$el.__livewire.id??r.findClosest(e,(e=>e.__livewire.id))},get errors(){return this.$store.validationErrors.__errors[this.wireId]??[]},get models(){let e=[];for(const r of this.$store.validationErrors.getWireModels(this.wireId))e.push({name:r,errors:this.$store.validationErrors.getErrorMessages(this.wireId,r)});return e},messages(e,r){if(r){let r=[],s=e.split("*")[0],i=this.models.filter((e=>e.name.startsWith(s)));for(const e of i)r.push(...e.errors);return r}return this.$store.validationErrors.getErrorMessages(this.wireId,e)}})})}(e,s)})).before("bind"),e.magic("errors",((e,{Alpine:r})=>s=>r.$data(e).messages(s,s.endsWith("*")))),e.magic("hasError",((e,{Alpine:r})=>s=>{let i=r.$data(e).models.find((e=>e.name===s));return!!i&&i.errors.length>0}))}function r(e){document.addEventListener("DOMContentLoaded",(()=>{Livewire.hook("message.processed",((r,s)=>{let i=e.$data(s.el);"localValidation"===i.__component&&i.processValidation(r.response.serverMemo.errors)}))})),e.directive("validation",((e,{modifiers:r},{Alpine:s})=>{!function(e,r){r.bind(e,{"x-data":()=>({__component:"localValidation",errors:[],models:[],processValidation(e){this.errors=e,this.models=Object.keys(e)},errorsFor(e){if(e.includes("*")){let r=this.wildcardModelSearch(e),s=[];for(let e of r)s.push(...this.errors[e]);return s}return this.errors[e]??[]},hasErrors(e){return this.errorsFor(e).length>0??!1},wildcardModelSearch(e){let r=new RegExp(e.replaceAll("*",".*"));return this.models.filter((e=>r.test(e)))}})})}(e,s)})).before("bind")}document.addEventListener("alpine:init",(()=>{r(window.Alpine),e(window.Alpine)}))}));
//# sourceMappingURL=alpine-validation.min.js.map
